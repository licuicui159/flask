1.搭建结构
	from flask import Flask
	app = Flask(__name__)

	@app.route('/')
	def fun():
		return ""

	if __name__ == "__main__":
		app.run(debug=True,port=6000)
2.路由
	@app.route() 表示路由

	@app.route('/') : 表示根路径 / 首页
	@app.route('/index') : 表示 http://localhost:5000/index

	1.带参数路由
		@app.route('/index/<name>')
		def index(name):
			return ""

		@app.route('/index/<name>/<gender>')
		def index(name,gender):
			return ""

		@app.route('/index/<int:age>')
		def index(age):
			return ""
		
		类型转换器：
			默认 ：字符串，不能包含 /
			int: ：整型
			float: ：浮点型
			path: ：字符串，允许包含 /

	2.多个访问路径交给同一视图处理函数
		http://localhost:5000/index
		http://localhost:5000/index/wangwc
		
		@app.route('/index')
		@app.route('/index/<name>')
		def index(name=None):
			if name is None :
				xxxx xxxx
			return ""
3.路由的反向解析
	函数 ：
		s = url_for(funName,arg1=value1,arg2=value2)


M : Models 模型层
T : Templates 模板层
V : Views 视图层
============================================
1.模板 - Templates
	1.什么是模板
		模板 ， 在Flask 中就是允许响应给用户看的网页
		在模板中，允许包含"占位变量"来表示动态的内容
		模板最终也会被解析成字符串再响应给客户端，这一过程通常称为"渲染"

		Flask中的模板是依赖于 Jinja2 的模板系统
	2.模板的设置
		默认情况下，Flask会在程序文件夹中的 templates 的子文件夹中搜索模板

		默认情况下，需要手动创建 templates 文件夹
		
	3.模板的渲染
		作用：在视图中，将模板文件(xx.html)渲染成字符串之后，再响应给客户端浏览器
		函数：render_template('xxx.html')
			return render_template('xxx.html')
	4.模板中的语法(重难点)
		1.变量
			变量是一种特殊的占位符，告诉模板引擎该位置的值是从渲染模板时的数据中获取出来的。

			在视图中 ：
				@app.route('/')
				def index():
					return render_template('xxx.html',变量1=值1,变量2=值2,..)

					return render_template('xxx.html',name='laowang',age=35)
			在模板中 ：
				{{变量名}}
				
				<h1>{{name}}</h1>
			练习：
				在 01-template.html基础上，完成下列效果显示：
				歌名 ：《绿光》
				作词 ： 宝强
				作曲 ： 乃亮
				演唱 ： 羽凡
		2.过滤器
			1.什么是过滤器
				过滤器是允许在变量输出前改变变量的值
			2.语法
				{{变量|过滤器}}
				
				Jinja2 模板中常见过滤器：
				过滤器名           说明
				capitalize         首字符变大写，其他变小写
				lower              将值转换为小写
				upper              将值转换为大写
				title              将值中的每个单词首字符变大写
				trim               去掉值两边的空格
		3.标签
			1.什么是标签
				每个标签标示的是不同的服务器端的功能
			2.常用标签
				1. if 标签
					1.基本if结构
						{% if 条件 %}
						{% endif %}

					2.if ... else ... 结构
						{% if 条件 %}
							满足条件时要运行的代码
						{% else %}
							不满足条件时要运行的代码
						{% endif %}
					3.if ... elif ... elif ... else
						{% if 条件1 %}
							满足条件1，要运行的代码
						{% elif 条件2 %}
							满足条件2，要运行的代码
						{% elif 条件3 %}
							满足条件3，要运行的代码
						{% else %}
							以上条件都不满足的时候，要运行的代码
						{% endif %}
				2. for 标签
					{% for 变量 in 元组|列表|字典 %}
					{% endfor %}

					在 Jinja2 模板的循环中，支持内部变量 - loop
					loop作用：记载当前循环中的一些相关信息
					loop 常用属性：
						1. index
							用法：loop.index
							作用：记录当前循环的次数，从 1 开始记录
						2. index0
							用法：loop.index0
							作用：同上，从0开始记录
						3. first
							用法：loop.first
							作用：值为True，则表示当前循环是第一次循环
						4. last
							用法：loop.last
							作用：值为True，则表示当前循环是最后一次循环
				3. macro 标签 (宏)
					1.作用
						相当于是在模板中声明函数
					2.语法
						使用 {% macro %} 声明宏

						{% macro 名称(参数列表) %}
							xxxx  xxxx
						{% endmacro %}
					3.在独立的文件中声明宏
						1.创建 macro.html 模板文件
							作用：定义项目中要用到的所有的宏
						2.在使用的网页中，导入 macro.html 
							{% import 'macro.html' as macros %}
				4. include 标签
					将其他的模板文件包含到当前的模板文件中
					语法：{% include 'xxx.html' %}
	5.静态文件处理
		1.什么是静态文件
			在Flask中不能与服务器动态交互的文件都是静态文件
			如：图片，css文件，js文件，音视频文件，...
				<img src="images/a.jpg">
				<link rel="" href="css/a.css">
				<script src="js/a.js"></script>
				<video src="mp4/a.mp4"></video>
				<audio src="music/a.mp3"></audio>
		2.静态文件的处理
			1.所有的静态文件必须放在名为 static 的目录中
				static目录要放在项目的根目录处
				FlaskDemo02
					run01.py
					templates
						01-xxx.html
						02-xxx.html
					static
						images
							a.jpg
							b.jpg
						js
							body.js
							slider.js
						css
			2.所有的静态文件必须通过 /static/ 路径访问
				/static/images/a.jpg

				/static 要到静态资源目录中继续搜索

		

作业：
	搭建 Blog 项目结构
	1.创建项目 - Blog
	2.将 所有的 html 文件 copy 到 templates 目录中作为模板
	3.创建 static 目录，将 js 目录，css目录，images目录 copy到 static 中
	4.创建 路由 /
		访问 根路径时，显示首页模板(index.html)
		要求：css，images，js 都能正常显示












params = {
	'author': '奥斯特罗夫斯基', 
	'dic': {'WWC': '隔壁老王', 'LZ': '吕泽', 'WMZ': '老魏', 'MM': '蒙蒙'}, 
	'bookName': '钢铁是怎样炼成的', 
	'tup': ('水浒传', '三国演义', '红楼梦', '西游记'),
	'price': 32.5, 
	'list': ['漩涡鸣人', '卡卡西', '自来也', '佐助'], 
	'person': <__main__.Person object at 0x7f157c2c9048>
}

params['author']

