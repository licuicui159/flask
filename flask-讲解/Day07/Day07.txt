1.数据库的操作
	1.查询 - 基于 Models 查询
		Models.query.查询过滤器().查询执行函数()
	2.修改
		1.查
			得到数据
		2.改
			通过实体对象修改数据
		3.保存
			db.session.add(实体)
	3.删除
		db.session.delete(实体)
2.关系映射
	1.一对多
		1.在 "多" 实体中
			外键列名=db.Column(db.Integer,db.ForeignKey('主表.主键'))
		2.在 "一" 实体中
			属性名=db.relationiship("多的实体类名",backref="属性名",lazy="dynamic")

			lazy:指定如何加在相关记录
				1.select
					首次访问时加载
				2.immediate
					源对象加载后立马加载相关数据
				3.subquery
					效果同上，使用的是子查询
				4.noload
					永不加载
				5.dynamic
					不加载记录，但提供加载记录的查询
			uselist:
				如果设置为False，表示不使用列表而使用的是标量
			secondary:
				指定多对多关系中关联表的名字
	2.一对一
		1.在 "多" 实体类中体现
			外键列名=db.Column(db.Integer,db.ForeignKey('主表.主键'))
		2.在 "一" 实体类中体现
			属性名 = db.relationship("关联的实体类",backref="",uselist=False)

=========================================================
1.关系映射
	1.多对多
		1.什么是多对多
			A表中的一条数据可以与B表中任意多条数据相关联
			B表中的一条数据可以与A表中任意多条数据相关联
		2.实现
			在数据库中使用第三张表(关联表)
			在编程语言中，可以不编写对应的实体类
			1.创建第三张表
				student_course = db.Table(
					'student_course',#在数据库中表名
					db.Column('id',db.Integer,primary_key=True),
					db.Column(
						'student_id',
						db.Integer,
						db.ForeignKey('student.id')),
					db.Column(
						'course_id',
						db.Integer,
						db.ForeignKey('course.id'))
				)
2.cookies / cookie
	1.什么是cookies
		cookie 是一种数据存储手段
		将一段文本保存在客户端(浏览器)的一种手段，并可以长时间保存
	2.cookies的使用场合
		1.记住密码
		2.记住搜索关键词
	3.Flask 中使用 cookies
		1.使用响应对象，将数据保存进cookies(客户端)
			1.resp = make_response("字符串"|render_template())
			2.resp = redirect('地址')

			cookies 的语法
			响应对象.set_cookie(key,value,max_age)
				key:保存的cookie的名称
				value:保存的cookie的值
				max_age:保存的时间，取值为数字，默认以 s 为单位
					60 ：一分钟
					60 * 60 ：一小时
					60 * 60 * 24 ：一天
					60 * 60 *24 * 365 ：一年
		2.获取 cookie 的值
			每次向服务器发送请求时，都会把cookie中的数据封装到request中并带到服务器上
			在flask中通过 request.cookies 获取所有的cookies值
		3.删除cookie的值
			响应对象.delete_cookie('key')









	{
		'uname': 'jack', 
		'csrftoken': 'n5KInc6ybogDshzgCIGsNgKuPLCIWv1Aus1twEtssK1TkZglnD51NlBa4axghzg1'
	}
3.session - 会话
	1.什么是session
		session是保存在服务器上，为每个浏览器所开辟的一段空间
	2.session 在 Flask 中的实现
		1.配置 SECRET_KEY
			app.config['SECRET_KEY']="xiangxieshaxiesha"
		2.使用session
			from flask import session

			1.向session中保存数据
				session['key']=value
			2.从session中取值
				value = session['key']
				value = session.get('key','')
			3.从session中删除数据
				del session['key']







